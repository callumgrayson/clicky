{"version":3,"sources":["Clicker/Clicker.js","App.js","serviceWorker.js","index.js"],"names":["TimeStamps","props","classes","times","ip","length","react_default","a","createElement","index_es","align","gutterBottom","map","t","id","timestamp","toString","count","date2","Date","date3","concat","key","className","listItem1","primary","placeholderCl","withStyles","theme","body","margin","padding","boxSizing","bigContainerCl","width","minHeight","display","justifyContent","paperCl","maxWidth","marginTop","big1Space","alignContent","flexWrap","height","heading","marginBottom","countBar","countBox","justifyItems","alignItems","countBoxDiv","big2ButtonBox","textAlign","list1","maxHeight","overflow","_React$Component","Clicker","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","timeStamps","handleClick","bind","assertThisInitialized","inherits","createClass","value","_this2","axios","get","then","response","data","currentClickCount","setState","e","_this3","preventDefault","timestamp1","now","objSend","post","content-type","res","newClickCount","timestamps","sourceIp","console","log","variant","color","aria-label","onClick","Add_default","disablePadding","dense","React","Component","App","Clicker_Clicker","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f17fef09.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  body: {\r\n    margin: 0,\r\n    padding: 0,\r\n    boxSizing: 'content-box',\r\n  },\r\n  bigContainerCl: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: '100%',\r\n    minHeight: '97vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    // background: 'lightBlue',\r\n  },\r\n  paperCl: {\r\n    width: '100%',\r\n    maxWidth: 700,\r\n    minHeight: '80%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: '10px',\r\n    // background: 'lightGreen',\r\n  },\r\n  big1Space: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignContent: 'start',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n    height: 'auto',\r\n    padding: '5px 0',\r\n    margin: '5px',\r\n    // background: 'yellow',\r\n  },\r\n  heading: {\r\n    width: '100%',\r\n    marginBottom: '10px',\r\n    padding: 0,\r\n    // background: 'cyan',\r\n  },\r\n  countBar: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n    // background: 'green',\r\n    padding: '0 20px',\r\n  },\r\n  countBox: {\r\n    display: 'flex',\r\n    justifyItems: 'center',\r\n    alignItems: 'center',\r\n    // background: 'goldenrod',\r\n    margin: '0 20px',\r\n  },\r\n  countBoxDiv: {\r\n    display: 'flex',\r\n    margin: '20px',\r\n    // background: 'lightGreen',\r\n  },\r\n  big2ButtonBox: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    // background: 'pink',\r\n    margin: '0 20px',\r\n  },\r\n  listItem1: {\r\n    textAlign: 'center',\r\n    // background: 'lightCyan',\r\n  },\r\n  list1: {\r\n    width: '100%',\r\n    height: 'auto',\r\n    maxHeight: '80vh',\r\n    overflow: 'hidden',\r\n    // background: 'violet',\r\n  },\r\n});\r\n\r\nfunction TimeStamps(props) {\r\n  const { classes, times, ip } = props;\r\n  if (times.length) {\r\n    return (\r\n      <div>\r\n        <Typography\r\n          align='center'\r\n          gutterBottom >\r\n          Your Clicks\r\n        </Typography>\r\n        {\r\n          times.map((t) => {\r\n            const id = t.timestamp.toString();\r\n            const count = t.count;\r\n            const date1 = new Date(t.timestamp);\r\n            const date2 = date1.toString();\r\n            const date3 = `${count} : ${date2} from ${ip}`;\r\n\r\n            return (\r\n              <ListItem\r\n                key={id}\r\n                className={classes.listItem1}>\r\n                <ListItemText primary={date3} />\r\n              </ListItem>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className={classes.placeholderCl}>\r\n        <Typography align='center'>\r\n          \r\n        </Typography>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(\r\n  class Clicker extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        count: 0,\r\n        ip: '',\r\n        timeStamps: []\r\n      }\r\n\r\n      this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n      axios.get(`https://nxe6l78bx2.execute-api.ap-southeast-1.amazonaws.com/dev/clinc`)\r\n      .then(response => {\r\n        const count = response.data.currentClickCount;\r\n        this.setState({ count });\r\n      });\r\n    }\r\n\r\n    handleClick(e) {\r\n      e.preventDefault();\r\n      const timestamp1 = Date.now();\r\n      const objSend = {timestamp: timestamp1};\r\n      const header = {'content-type': 'application/json'};\r\n      axios.post(`https://nxe6l78bx2.execute-api.ap-southeast-1.amazonaws.com/dev/clinc`, objSend, header).then(res => {\r\n\r\n        if (res.data.newClickCount > 0) {\r\n          const tsObj = {\r\n            count: this.state.count + 1,\r\n            timestamp: timestamp1\r\n          }\r\n          const timestamps = [tsObj].concat(this.state.timeStamps);\r\n          this.setState(state => ({\r\n            count: this.state.count + 1,\r\n            timeStamps: timestamps,\r\n            ip: res.data.sourceIp\r\n          }));\r\n        } else {\r\n          console.log(\"Error: Did not successfully write timestamp\");\r\n        }\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const { classes } = this.props;\r\n\r\n      return (\r\n        <div className={classes.bigContainerCl}>\r\n          <Paper className={classes.paperCl}>\r\n            <div className={classes.big1Space}>\r\n              <Typography\r\n                className={classes.heading}\r\n                variant='h3'\r\n                align='center'\r\n                gutterBottom>\r\n                Clicky\r\n              </Typography>\r\n              <Typography\r\n                className={classes.heading}\r\n                variant='h6'\r\n                align='center'\r\n                gutterBottom>\r\n                Add your click to the count!\r\n              </Typography>\r\n\r\n              <div className={classes.countBar}>\r\n                <div className={classes.countBox}>\r\n                  <div className={classes.countBoxDiv}>\r\n                    <Typography\r\n                      variant='h6'\r\n                      align='center'\r\n                      gutterBottom>\r\n                      Current Count:\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.countBoxDiv}>\r\n                    <Typography\r\n                      variant='h4'\r\n                      align='center'\r\n                      gutterBottom>\r\n                      {this.state.count}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              \r\n                <div className={classes.big2ButtonBox}>\r\n                  <Button \r\n                    variant=\"fab\" \r\n                    color=\"primary\" \r\n                    aria-label=\"Add\" \r\n                    onClick={this.handleClick}>\r\n                    <AddIcon />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n\r\n              <List\r\n                className={classes.list1}\r\n                disablePadding\r\n                dense\r\n                >\r\n                <TimeStamps\r\n                  classes={classes}\r\n                  times={this.state.timeStamps}\r\n                  ip={this.state.ip}\r\n                />\r\n              </List>\r\n            </div>\r\n            \r\n          </Paper>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n)\r\n","import React, { Component } from 'react';\nimport Clicker from './Clicker/Clicker';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Clicker/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}